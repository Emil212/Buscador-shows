{"version":3,"sources":["scripts.js"],"names":["d","document","$shows","getElementById","$template","content","$a","querySelector","$img","$fragment","createDocumentFragment","addEventListener","async","e","target","matches","key","innerHTML","query","value","toLowerCase","api","res","fetch","json","ok","status","statuText","statusText","length","forEach","el","textContent","show","name","summary","src","image","medium","alt","href","url","appendChild","$clone","importNode","err","console","log","message"],"mappings":"AAAA,MAAAA,EAAAC,SACAC,OAAAF,EAAAG,eAAA,SACAC,UAAAJ,EAAAG,eAAA,iBAAAE,QACAC,GAAAF,UAAAG,cAAA,KACAC,KAAAJ,UAAAG,cAAA,OACAE,UAAAT,EAAAU,yBAEAV,EAAAW,iBAAA,WAAAC,MAAAC,IACA,GAAAA,EAAAC,OAAAC,QAAA,YACA,UAAAF,EAAAG,IACA,IACAd,OAAAe,UAAA,8EAEA,IAAAC,EAAAL,EAAAC,OAAAK,MAAAC,cACAC,EAAA,yCAAAH,EACAI,QAAAC,MAAAF,GACAG,QAAAF,EAAAE,OAEA,IAAAF,EAAAG,GAAA,KAAA,CAAAC,OAAAJ,EAAAI,OAAAC,UAAAL,EAAAM,YAEA,IAAAJ,EAAAK,OACA3B,OAAAe,UAAA,2DAAAC,UAEAM,EAAAM,QAAAC,IACA3B,UAAAG,cAAA,MAAAyB,YAAAD,EAAAE,KAAAC,KACA9B,UAAAG,cAAA,OAAAU,UAAAc,EAAAE,KAAAE,QACAJ,EAAAE,KAAAE,QACA,kBAEA/B,UAAAG,cAAA,OAAA6B,IAAAL,EAAAE,KAAAI,MACAN,EAAAE,KAAAI,MAAAC,OACA,mEAEAlC,UAAAG,cAAA,OAAAgC,IAAAR,EAAAE,KAAAC,KACA9B,UAAAG,cAAA,KAAAiC,KAAAT,EAAAE,KAAAQ,IAAAV,EAAAE,KAAAQ,IAAA,IACArC,UAAAG,cAAA,KAAAO,OAAAiB,EAAAE,KAAAQ,IACA,SACA,QAEAnC,GAAAoC,YAAAlC,MAEA,IAAAmC,EAAA3C,EAAA4C,WAAAxC,WAAA,GACAK,UAAAiC,YAAAC,KAEAzC,OAAAe,UAAA,GACAf,OAAAwC,YAAAjC,YAEA,MAAAoC,GACAC,QAAAC,IAAAF,GACA,IAAAG,EACAH,EAAAlB,WAAA,iDACAzB,OAAAe,UAAA,YAAA4B,EAAAnB,WAAAsB","file":"bundle.js","sourcesContent":["const d = document,\r\n  $shows = d.getElementById(\"shows\"),\r\n  $template = d.getElementById(\"show-template\").content,\r\n  $a = $template.querySelector(\"a\"),\r\n  $img = $template.querySelector(\"img\"),\r\n  $fragment = d.createDocumentFragment();\r\n\r\nd.addEventListener(\"keypress\", async (e) => {\r\n  if (e.target.matches(\"#search\")) {\r\n    if (e.key === \"Enter\") {\r\n      try {\r\n        $shows.innerHTML = `<img src=\"../ASSETS/spinning-circles.svg\" alt=\"Cargando...\" class=\"loader\">`;\r\n\r\n        let query = e.target.value.toLowerCase(),\r\n          api = `https://api.tvmaze.com/search/shows?q=${query}`,\r\n          res = await fetch(api),\r\n          json = await res.json();\r\n\r\n        if (!res.ok) throw { status: res.status, statuText: res.statusText };\r\n\r\n        if (json.length === 0) {\r\n          $shows.innerHTML = `<h2>No existen resultados para el criterio de busqueda: ${query}</h2>`;\r\n        } else {\r\n          json.forEach((el) => {\r\n            $template.querySelector(\"h3\").textContent = el.show.name;\r\n            $template.querySelector(\"div\").innerHTML = el.show.summary\r\n              ? el.show.summary\r\n              : \"Sin descripci√≥n\";\r\n\r\n            $template.querySelector(\"img\").src = el.show.image\r\n              ? el.show.image.medium\r\n              : \"https://static.tvmaze.com/images/no-img/no-img-portrait-text.png\";\r\n\r\n            $template.querySelector(\"img\").alt = el.show.name;\r\n            $template.querySelector(\"a\").href = el.show.url ? el.show.url : \"#\";\r\n            $template.querySelector(\"a\").target = el.show.url\r\n              ? \"_blank\"\r\n              : \"_self\";\r\n\r\n            $a.appendChild($img);\r\n\r\n            let $clone = d.importNode($template, true);\r\n            $fragment.appendChild($clone);\r\n          });\r\n          $shows.innerHTML = \"\";\r\n          $shows.appendChild($fragment);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        let message =\r\n          err.statuText || \"Ocurrio un error al consumir la API de TvMazer\";\r\n        $shows.innerHTML = `<p>Error ${err.status}: ${message}</p>`;\r\n      }\r\n    }\r\n  }\r\n});\r\n"]}